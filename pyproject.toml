[tool.poetry]
name = "mss-back-gepeto"
version = "0.1.0"
description = ""
authors = ["Luis Guilherme de Souza Munhoz <luisguilherme.sm@hotmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
lambda-forge = "^2.1.12"
requests = "2.31.0"
firebase-admin = "^6.5.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.6"
mypy = "^1.11.2"


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F", "PL", "C", "W"]
ignore = ["PLR", "PLC"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
python_version = "3.10"
show_error_codes = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
exclude = ["scripts", "test"]

[tool.pytest.ini_options]
python_files = ["unit.py", "integration.py", "main.py"]
norecursedirs = ["cdk.out"]

[tool.pytest.ini_options.markers]
integration = "mark a test as an integration test. (method, endpoint)"

[tool.coverage.run]
branch = true
include = ["functions/**/main.py"]
omit = []

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
